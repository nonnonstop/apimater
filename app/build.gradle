plugins {
    id 'com.android.application'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    signingConfigs {
        release {
            storeFile file('./misc/keystore.jks')
            storePassword 'i1KY2P37COLmzLtE'
            keyAlias 'key0'
            keyPassword 'i1KY2P37COLmzLtE'
        }
    }
    compileSdkVersion 33
    buildToolsVersion '34.0.0'

    defaultConfig {
        applicationId "com.nonnonstop.apimate"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 701
        versionName "0.7.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        dataBinding true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.nonnonstop.apimate'

    task npmInstall(type: NpmExec) {
        npmCommandLine 'install'
    }
    task npmBuild(type: NpmExec) {
        dependsOn npmInstall
        npmCommandLine 'run', 'build'
    }
    task npmClean(type: NpmExec) {
        ignoreExitValue true
        npmCommandLine 'run', 'clean'
    }
    preBuild.dependsOn npmBuild
    clean.dependsOn npmClean
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2'
    implementation 'org.mozilla:rhino:1.7.13'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Build TypeScript
import org.apache.tools.ant.taskdefs.condition.Os

class NpmExec extends Exec {
    void npmCommandLine(String... args) {
        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def nodePath = properties.getProperty('NODE_PATH', '')
        environment 'PATH', nodePath

        workingDir 'src/main/script'
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine('cmd', '/c', 'npm.cmd', *args)
        } else {
            commandLine('npm', *args)
        }
    }
}
